package pages

import (
	"fmt"
	"image/color"
	"io/ioutil"
	"strings"
	"time"

	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/canvas"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/widget"
	yaac_shared "github.com/DHBW-SE-2023/YAAC/internal/shared"
)

func landingScreen(_ fyne.Window) fyne.CanvasObject {
	logo := canvas.NewImageFromFile("assets/Icon.png")
	logo.FillMode = canvas.ImageFillContain
	logo.SetMinSize(fyne.NewSize(400, 400))
	_ = widget.NewButton("Insert List", func() {
		testInsertAttendanceList()
	})

	_ = widget.NewButton("Bulk Insert Students TIK", func() {
		testInsertStudent()
	})

	titleObjects := accentFirstLetters("Yet Another Attendance Checker")
	description := canvas.NewText("Ihre Plattform zur Anwesenheits Verwaltung", color.Black)
	description.Alignment = fyne.TextAlignCenter
	description.TextStyle = fyne.TextStyle{Bold: true}
	description.TextSize = 28

	return container.NewCenter(container.NewVBox(
		titleObjects,
		logo,
		description,
	))
}

func testInsertAttendanceList() {
	imageFilePath := "assets/list.jpg"
	var testTime = time.Now()
	// Read the image file
	imageBytes, err := ioutil.ReadFile(imageFilePath)
	if err != nil {
		fmt.Println("Error reading image file:", err)
		return
	}
	attendanceList := yaac_shared.AttendanceList{
		ReceivedAt: testTime,
		CourseID:   1,
		Image:      imageBytes,
	}
	myMVVM.InsertList(attendanceList)
}

func testInsertStudent() {
	students := []string{"Robin Beats", "Phillip Rotweiler", "Finley Hogan", "Julia Egger", "Yannick Seidel", "David Fischer", "Linus Marshall", "Hannes Nusch", "Edward Medwedkin", "Marco Beuerle", "Lysann Baumann", "Milan Kiele", "Tobias y"}
	for _, element := range students {
		myMVVM.InsertStudent(yaac_shared.Student{FirstName: strings.Split(element, " ")[0], LastName: strings.Split(element, " ")[1], IsImmatriculated: true, CourseID: 1})
	}
}

func accentFirstLetters(title string) *fyne.Container {
	var titleObjects []fyne.CanvasObject
	words := strings.Fields(title)

	for _, word := range words {
		firstLetter := string(word[0])
		firstLetterText := canvas.NewText(firstLetter, color.RGBA{248, 0, 0, 255})
		firstLetterText.TextStyle = fyne.TextStyle{Bold: true}
		firstLetterText.TextSize = 32
		restOfWordText := canvas.NewText(word[1:], color.Black)
		restOfWordText.TextStyle = fyne.TextStyle{Bold: true}
		restOfWordText.TextSize = 32
		wordContainer := container.NewHBox(firstLetterText, restOfWordText)
		titleObjects = append(titleObjects, wordContainer)
	}
	return container.NewCenter(container.NewHBox(titleObjects...))
}
